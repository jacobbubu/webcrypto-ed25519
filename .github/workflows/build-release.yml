name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test on node ${{ matrix.node }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [18, 16]
        os:
          - ubuntu-latest
          - macOS-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install
        env:
          CI: true
        run: npm ci

      - name: Build
        if: success()
        run: npm run build

      - name: Test
        if: success()
        run: npm run test:prod

      - name: Coveralls
        if: success()
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{ matrix.test_number }}
          parallel: true

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true

  release:
    name: npm publish / GitHub release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install
        env:
          CI: true
        run: npm ci

      - name: Build
        if: success()
        run: npm run build

        # npm run test:prod && npm run build && npm run report-coverage
      - name: Semantic Release
        if: success()
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        with:
          branch: main
          extra_plugins: |
            @semantic-release/git
            @semantic-release/changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: New release published
        if: steps.semantic.outputs.new_release_published == 'true'
        run: echo ${{ steps.semantic.outputs.new_release_version }}
